[versions]
redline = "0.0.1"
kotlin = "2.1.0"
spring = "6.2.0"
spring-boot = "3.4.0"
spring-security = "6.2.3"
spring-kafka = "3.2.4"
spring-expression = "6.2.0"
jackson = "2.18.2"
netty = "4.1.119.Final"
jsonschema-validator = "1.5.6"
jsonschema2pojo = "1.2.2"
openapi-generator = "7.12.0"
ktlint = "12.2.0"
postgresql = "42.7.5"
hibernate = "6.6.2.Final"
jakarta-validation = "3.1.0"
swagger = "2.2.25"
springdoc-openapi-mvc-ui = "2.8.5"
springdoc-openapi-ui = "1.8.0"

[plugins]
jsonschema2pojo = { id = "org.jsonschema2pojo", version.ref = "jsonschema2pojo" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
#ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }

[libraries]

# Spring Boot Starters
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-boot-starter-integration = { module = "org.springframework.boot:spring-boot-starter-integration", version.ref = "spring-boot" }
spring-boot-starter-jooq = { module = "org.springframework.boot:spring-boot-starter-jooq", version.ref = "spring-boot" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "spring-boot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-data-elasticsearch = { module = "org.springframework.boot:spring-boot-starter-data-elasticsearch", version.ref = "spring-boot" }

# Spring Components
spring-security-config = { module = "org.springframework.security:spring-security-config", version.ref = "spring-security" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }
spring-expression = { module = "org.springframework:spring-expression", version.ref = "spring-expression" }
#spring-context = { module = "org.springframework:spring-context", version.ref = "xx" }
#spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "xx" }
#spring-tx = { module = "org.springframework:spring-tx", version.ref = "xx" }

# Spring Integration
#spring-integration-syslog = { module = "org.springframework.integration:spring-integration-syslog", version.ref = "spring-integration" }
#spring-integration-core = { module = "org.springframework.integration:spring-integration-core", version.ref = "spring-integration" }

# Spring Data
spring-data-jpa = { module = "org.springframework.data:spring-data-jpa", version.ref = "spring-boot" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-boot" }

# Hibernate
hibernate = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }

# json
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jsonschema-validator = { module = "com.networknt:json-schema-validator", version.ref = "jsonschema-validator" }

# Others
netty = { module = "io.netty:netty-all", version.ref = "netty" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger" }
springdoc-openapi-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi-mvc-ui" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "springdoc-openapi-ui" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
jakarta-validation = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation" }
